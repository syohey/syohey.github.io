<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Shohei&#39;s Spontaneous Blog</title>
    <link>https://syohey.github.io/posts/</link>
    <description>Recent content in Posts on Shohei&#39;s Spontaneous Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 24 Jul 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://syohey.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Data Structures: Doubly Linked Lists</title>
      <link>https://syohey.github.io/posts/ds-dll/</link>
      <pubDate>Fri, 24 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://syohey.github.io/posts/ds-dll/</guid>
      <description>Doubly linked lists might be one of the useful data structures I like. Even though personally I lean more towards linked hash map, but I think they are similar in a way.
To be honest, I have never even used linked hash map so I can&amp;rsquo;t really say.
Anyways, I happen to be utilizing a doubly linked list in my project right now, so I wanted to go over it before I forget how it works again.</description>
    </item>
    
    <item>
      <title>Rust Tutorial: I/O</title>
      <link>https://syohey.github.io/posts/rs-tutorial-io/</link>
      <pubDate>Tue, 21 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://syohey.github.io/posts/rs-tutorial-io/</guid>
      <description>Input/output in Rust is one of the things that confuses me, so I wanted to drop a quick tutorial on how to io in Rust.
use std::io; fn main() { // To begin with, let us take an input value.  print!(&amp;#34;Type something... &amp;#34;); let mut input_1 = String::new(); // This will prompt a user to input something.  io::stdin().read_line(&amp;amp;mut input_1).ok().expect(&amp;#34;failed to read line.&amp;#34;); println!(&amp;#34;You typed {}.&amp;#34;, input_1); } </description>
    </item>
    
    <item>
      <title>New Theme</title>
      <link>https://syohey.github.io/posts/new-theme/</link>
      <pubDate>Mon, 20 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://syohey.github.io/posts/new-theme/</guid>
      <description>I have changed the hugo theme again&amp;hellip; I just wanted something super simple that I don&amp;rsquo;t get tired of for a while&amp;hellip; I think I finally found it!
I am excited about making more blog posts on the things I want to master by hopefully November! ðŸ˜†</description>
    </item>
    
    <item>
      <title>Bash Basics</title>
      <link>https://syohey.github.io/posts/bash-basics/</link>
      <pubDate>Mon, 18 May 2020 00:00:00 -0700</pubDate>
      
      <guid>https://syohey.github.io/posts/bash-basics/</guid>
      <description>In this post, I would like to introduce the super basic bash usage.
The reason why it&amp;rsquo;s super basic is that I myself don&amp;rsquo;t know nothing much about bash, since I&amp;rsquo;ve never really used it&amp;hellip;
Let&amp;rsquo;s just get started.
 $ echo &amp;lt;message&amp;gt; will print a message that you write. e.g. $ echo hello world will print hello world.  Â 2. $ printf &amp;quot;&amp;lt;message&amp;gt;&amp;quot; will do the same thing as $ echo &amp;lt;message&amp;gt; but requires double quotation marks.</description>
    </item>
    
    <item>
      <title>Git Basics</title>
      <link>https://syohey.github.io/posts/git-basics/</link>
      <pubDate>Fri, 15 May 2020 22:04:01 -0700</pubDate>
      
      <guid>https://syohey.github.io/posts/git-basics/</guid>
      <description>$ git init to initialize a git repo.
  $ git config --list to show your git config.
  $ git add &amp;lt;file-name&amp;gt; to stage your file(s).
  $ git commit -m &amp;quot;&amp;lt;your-comment&amp;gt;&amp;quot; to make a commit.
  $ git push to save your work on your GitHub or GitLab or&amp;hellip;?
    $ git status to show the current working repo&amp;rsquo;s status.</description>
    </item>
    
    <item>
      <title>Hugo Tutorial: Quickstart</title>
      <link>https://syohey.github.io/posts/hugo-quickstart/</link>
      <pubDate>Fri, 15 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://syohey.github.io/posts/hugo-quickstart/</guid>
      <description>I thought I wanted to leave myself a note on how to go about making a website with Hugo. Although the documentation explains it clearly enough, I still tend to take too much time getting it to work the way I expect&amp;hellip;
So, yeah, I don&amp;rsquo;t want to have to repeat myself again and again learning how to set it up in the future, so here it is for future me and you.</description>
    </item>
    
  </channel>
</rss>